'use strict';

function has(patterns, pattern) {
  return typeof patterns.has === 'function' ? patterns.has(pattern) : Object.prototype.hasOwnProperty.call(patterns, pattern);
}

function get(patterns, pattern) {
  return typeof patterns.get === 'function' ? patterns.get(pattern) : patterns[pattern];
}

function output(t, result) {
  return typeof result === 'string' ? t.stringLiteral(result) : typeof result === 'number' ? t.numericLiteral(result) : typeof result === 'boolean' ? t.booleanLiteral(result) : result === null ? t.nullLiteral() : result;
}

function stringLiteralReplace(_ref) {
  var t = _ref.types;

  return {
    visitor: {
      StringLiteral: function StringLiteral(path, state) {
        var patterns = state.opts.patterns;
        var value = path.node.value;
        if (!has(patterns, value)) return;
        var result = get(patterns, value);
        path.replaceWith(output(t, result));
      }
    }
  };
}

module.exports = stringLiteralReplace;